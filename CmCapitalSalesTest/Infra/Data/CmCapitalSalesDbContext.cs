// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using CmCapitalSalesAvaliacao.Domain.Models;
using Microsoft.EntityFrameworkCore;

namespace CmCapitalSalesAvaliacao.Infra.Data
{
    public partial class CmCapitalSalesDbContext : DbContext
    {
        public CmCapitalSalesDbContext()
        {
        }

        public CmCapitalSalesDbContext(DbContextOptions<CmCapitalSalesDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<PedidoItem> PedidoItem { get; set; }
        public virtual DbSet<Produto> Produto { get; set; }
        public virtual DbSet<Taxa> Taxa { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.HasKey(e => e.CdCliente);

                entity.ToTable("CLIENTE");

                entity.Property(e => e.CdCliente).HasColumnName("CD_CLIENTE");

                entity.Property(e => e.DtUltimaCompra)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_ULTIMA_COMPRA");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("NOME");

                entity.Property(e => e.Saldo)
                    .HasColumnType("money")
                    .HasColumnName("SALDO");
            });

            modelBuilder.Entity<Pedido>(entity =>
            {
                entity.HasKey(e => e.CdPedido);

                entity.ToTable("PEDIDO");

                entity.Property(e => e.CdPedido).HasColumnName("CD_PEDIDO");

                entity.Property(e => e.CdCliente).HasColumnName("CD_CLIENTE");

                entity.Property(e => e.DtPedido)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_PEDIDO");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.HasOne(d => d.CdClienteNavigation)
                    .WithMany(p => p.Pedido)
                    .HasForeignKey(d => d.CdCliente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PEDIDO_CLIENTE");
            });

            modelBuilder.Entity<PedidoItem>(entity =>
            {
                entity.HasKey(e => e.CdPedidoItem);

                entity.ToTable("PEDIDO_ITEM");

                entity.Property(e => e.CdPedidoItem).HasColumnName("CD_PEDIDO_ITEM");

                entity.Property(e => e.CdPedido).HasColumnName("CD_PEDIDO");

                entity.Property(e => e.CdProduto).HasColumnName("CD_PRODUTO");

                entity.Property(e => e.NrQuantidade).HasColumnName("NR_QUANTIDADE");

                entity.Property(e => e.ValorTotal)
                    .HasColumnType("money")
                    .HasColumnName("VALOR_TOTAL");

                entity.HasOne(d => d.CdPedidoNavigation)
                    .WithMany(p => p.PedidoItem)
                    .HasForeignKey(d => d.CdPedido)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PEDIDO_ITEM_PEDIDO");

                entity.HasOne(d => d.CdProdutoNavigation)
                    .WithMany(p => p.PedidoItem)
                    .HasForeignKey(d => d.CdProduto)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PEDIDO_ITEM_PRODUTO");
            });

            modelBuilder.Entity<Produto>(entity =>
            {
                entity.HasKey(e => e.CdProduto);

                entity.ToTable("PRODUTO");

                entity.Property(e => e.CdProduto).HasColumnName("CD_PRODUTO");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DESCRICAO");

                entity.Property(e => e.DtCadastro)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_CADASTRO");

                entity.Property(e => e.DtVencimento)
                    .HasColumnType("datetime")
                    .HasColumnName("DT_VENCIMENTO");

                entity.Property(e => e.ValorUnitario)
                    .HasColumnType("money")
                    .HasColumnName("VALOR_UNITARIO");
            });

            modelBuilder.Entity<Taxa>(entity =>
            {
                entity.HasKey(e => e.CdTaxa);

                entity.ToTable("TAXA");

                entity.Property(e => e.CdTaxa).HasColumnName("CD_TAXA");

                entity.Property(e => e.Percentual).HasColumnName("PERCENTUAL");

                entity.Property(e => e.ValorFinal)
                    .HasColumnType("money")
                    .HasColumnName("VALOR_FINAL");

                entity.Property(e => e.ValorInicial)
                    .HasColumnType("money")
                    .HasColumnName("VALOR_INICIAL");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}